name: deploy

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  deploy:
    name: deploy

    permissions:
      contents: read
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-task@v1

      # ------------------------------------------------------------------------

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cached-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: >
            python
            ${{ runner.os }}
            python-${{ matrix.python-version }}
            ${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt

      - name: Print Python info
        run: |
          which python
          python --version
          which pip
          pip --version
          pip freeze

      # ------------------------------------------------------------------------

      - name: Build docs
        run: |
          task build

      # ------------------------------------------------------------------------
      # Publish

      - name: Preview - Upload to Netlify
        if: github.event_name == 'pull_request'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=site
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Prod - Upload to Netlify
        if: (github.event_name != 'pull_request') && endsWith(github.ref, '/main')
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=site --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
