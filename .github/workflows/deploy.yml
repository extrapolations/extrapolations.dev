name: deploy

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: build

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-task@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cached-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: >
            python
            ${{ runner.os }}
            python-${{ matrix.python-version }}
            ${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt

      - name: Print Python info
        run: |
          which python
          python --version
          which pip
          pip --version
          pip freeze

      # ------------------------------------------------------------------------

      - name: Build docs
        run: |
          task build

      - name: C!ache dist
        id: cache-dist
        uses: actions/cache@v3
        with:
          path: dist
          key: >
            dist
            ${{ github.run_id }}
            ${{ github.run_attempt }}

  gcs:
    uses: ./.github/workflows/gcs.yml
    needs: [build]
    secrets: inherit

  post-deploy:
    needs: [gcs]
    runs-on: ubuntu-latest

    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')

    steps:
      - name: Purge Cloudflare Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
